{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Notice.js","routes/rrd.js","routes/Menu.js","routes/Re.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","repassword","setRepassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","alert","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","class","faGoogle","faGithub","window","location","href","faArrowAltCircleDown","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","creatorName","creatorEmail","src","faTrash","faPencilAlt","createdTime","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","date","Date","year","getFullYear","month","getMonth","clockDate","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Tim","createdAt","now","creatorId","displayName","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayname","updateProfile","v","signOut","push","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","title","faUser","faTools","faStickyNote","faCompass","pathname","faRedo","Notice","Style","Rrd","reload","Menu","Re","sendPasswordResetEmail","then","user","currentUser","prompt","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7bb8ec4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqdFTcX25DoBzmO0c3DqffqhXhqUU3CnY\",\r\n  authDomain: \"nwitter-a6440.firebaseapp.com\",\r\n  projectId: \"nwitter-a6440\",\r\n  storageBucket: \"nwitter-a6440.appspot.com\",\r\n  messagingSenderId: \"971228339638\",\r\n  appId: \"1:971228339638:web:2381d857f5e6e20f1ef517\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repassword, setRepassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"repassword\") {\r\n      setRepassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    if (repassword === password) {\r\n      event.preventDefault();\r\n      try {\r\n        let data;\r\n        if (newAccount) {\r\n          data = await authService.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );\r\n        } else {\r\n          data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n      } catch (error) {\r\n        setError(\"|!오류!|\\n\" + error.message);\r\n      }\r\n    } else {\r\n      alert(\"확인 비밀 번호가 일치하지 않습니다.\");\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"이메일\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"repassword\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호 확인\"\r\n          required\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"계정 생성\" : \"로그인\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"로그인\" : \"계정 생성\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { faArrowAltCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  const onDownClick = () => {\r\n    window.location.href =\r\n      \"https://runningboy02.github.io/bot/내나라인민소통망-손전화기에%20내려받기.zip\";\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"red\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <span className=\"center title\">내나라 인민 소통망</span>\r\n      <br />\r\n      <br />\r\n      <AuthForm />\r\n      <span class=\"center buk\">\r\n        ※손전화기 앱에서는 소셜로그인이 작동하지 않습니다.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Google로 계속 <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Github로 계속 <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n        <button onClick={onDownClick} className=\"authBtn\">\r\n          <FontAwesomeIcon icon={faArrowAltCircleDown} />\r\n          Android 설치파일 내려받기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"게시물 문구를 수정하세요.\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"게시물 수정\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h5 className=\"creatorName\">\r\n            {nweetObj.creatorName}에게서 작성됨({nweetObj.creatorEmail})\r\n          </h5>\r\n          <br />\r\n          <h1>{nweetObj.text}</h1>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n          <br />\r\n          <h5 className=\"createdTime\">{nweetObj.createdTime}에 게시됨</h5>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (nweet !== \"\") {\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n      }\r\n      var date = new Date();\r\n      var year = date.getFullYear();\r\n      var month = date.getMonth();\r\n      var clockDate = date.getDate();\r\n      var hours = date.getHours();\r\n      var minutes = date.getMinutes();\r\n      var seconds = date.getSeconds();\r\n      var Tim =\r\n        `${year}년 ${month + 1}월 ${clockDate}일 ` +\r\n        `${hours < 10 ? `0${hours}` : hours}:${\r\n          minutes < 10 ? `0${minutes}` : minutes\r\n        }:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        creatorEmail: userObj.email,\r\n        creatorName: userObj.displayName,\r\n        createdTime: Tim,\r\n      };\r\n      await dbService.collection(\"nweets\").add(nweetObj);\r\n      setNweet(\"\");\r\n      setAttachment(\"\");\r\n    } else {\r\n      alert(\"빈 문장은 입력이 불가능합니다\");\r\n    }\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"어떤생각을 하고있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 추가</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayname !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const emailclick = () => {\r\n    alert(\r\n      \"오류 발생시 'runningboy02@naver.com'으로 '\" +\r\n        userObj.email +\r\n        \"'과 오류나 건의 내용을 함께 보내주세요\\n(버전이 맞지 않으면 오류가 발생할 수 있음)\"\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"표사될 이름\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 갱신\"\r\n          className=\"formBtn buk\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        <br />\r\n        <span className=\"center\">\r\n          Your Email : <span onClick={emailclick}>{userObj.email}</span>\r\n        </span>\r\n      </form>\r\n      <br />\r\n      <span className=\"center buk\">\r\n        오류나 건의사항이 있다면 전자우편을 클릭해 주세요\r\n      </span>\r\n      <br />\r\n      <span className=\"center\">{userObj.v}</span>\r\n      <span className=\"formBtn cancelBtn logOut buk\" onClick={onLogOutClick}>\r\n        로그 아웃\r\n      </span>\r\n      <br />\r\n      <span className=\"center buk help\">도와주신 분들</span>\r\n      <br />\r\n      <p className=\"buk\">\r\n        <p>제작자 : 런닝보이</p>\r\n        <p>이름 창조자 : 서브마린</p>\r\n        <p>강의 : 노마드코더</p>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faUser,\r\n  faStickyNote,\r\n  faTools,\r\n  faRedo,\r\n  faCompass,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { MobileView } from \"react-device-detect\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"Home\"\r\n              icon={faTwitter}\r\n              color={\"red\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>게시판</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"profile\"\r\n              icon={faUser}\r\n              color={\"#04AAFF\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 프로필`\r\n                : \"프로필\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/note\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"release note\"\r\n              icon={faTools}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>패치 보고서</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/notice\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"Notice\"\r\n              icon={faStickyNote}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>공지사항</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/menu\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"menu\"\r\n              icon={faCompass}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>메뉴</span>\r\n          </Link>\r\n        </li>\r\n        {/* 모바일이면 보이게 pc는 안보이게*/}\r\n        <MobileView>\r\n          <li>\r\n            <Link\r\n              to={\"/rrd?\" + window.location.pathname}\r\n              style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                title=\"reload\"\r\n                icon={faRedo}\r\n                color={\"#fff\"}\r\n                size=\"2x\"\r\n              />\r\n              <span style={{ marginTop: 10 }}>새로고침</span>\r\n            </Link>\r\n          </li>\r\n        </MobileView>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\n// 공지사항에 모바일에서만 버전 가져와 보여주기\r\nconst Notice = ({ userObj }) => {\r\n  const ver = () => {\r\n    window.location.href = \"https://runningboy02.tistory.com/5\";\r\n  };\r\n  return (\r\n    <>\r\n      <span class=\"center buk\" Style=\"font-size: 30px\">\r\n        v 1.3부터 공지사항과 패치 보고서가 블로그로 이동합니다!\r\n        <br />\r\n        <br />\r\n        지금 버전 : {userObj.v}\r\n        <br />\r\n        <button className=\"ver buk\" onClick={ver}>\r\n          지금 버전 최신 확인\r\n        </button>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default Notice;\r\n","import React from \"react\";\r\n\r\nconst Rrd = () => {\r\n  return (\r\n    <>\r\n      {window.location.reload()}\r\n      {(window.location.href = \"/nwitter\")}\r\n    </>\r\n  );\r\n};\r\nexport default Rrd;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  const history = useHistory();\r\n  const blog = () => {\r\n    window.location.href = \"https://runningboy02.tistory.com/\";\r\n  };\r\n  const ban = () => {\r\n    history.push(\"/re\");\r\n  };\r\n  return (\r\n    <>\r\n      <button class=\"center buk menubtn\" onClick={blog}>\r\n        블로그 바로가기\r\n      </button>\r\n      <button class=\"center buk menubtn\" onClick={ban}>\r\n        회원 탈퇴 및 비밀번호 변경 바로가기\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Menu;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\n\r\n// 공지사항에 모바일에서만 버전 가져와 보여주기\r\nconst Re = ({ userObj }) => {\r\n  const repassword = () => {\r\n    authService.sendPasswordResetEmail(userObj.email).then(() => {\r\n      alert(userObj.email + \"로 비밀번호 말송 메일을 발송 했습니다.\");\r\n    });\r\n  };\r\n  const delacc = () => {\r\n    const user = authService.currentUser;\r\n    var name = prompt(\r\n      \"계정을 삭제하려면 \" + userObj.displayName + \"를 입력하세요.\"\r\n    );\r\n    if (name === userObj.displayName) {\r\n      user.delete().then(() => {\r\n        alert(\"계정이 영구적으로 삭제되었습니다.\");\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다.\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={repassword}>비밀번호 재설정</button>\r\n      <button onClick={delacc} className=\"delacc\">\r\n        계정 영구 삭제\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Re;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Notice from \"routes/Notice\";\r\nimport Rrd from \"routes/rrd\";\r\nimport Menu from \"routes/Menu\";\r\nimport Re from \"routes/Re\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/note\">\r\n              <Notice userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/notice\">\r\n              <Notice userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/rrd\">\r\n              <Rrd userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/menu\">\r\n              <Menu userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/re\">\r\n              <Re userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n          v: \"v 1.3\",\n          //버전 업데이트 시 이메일 발송\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      email: user.email,\n      v: \"v 1.3.1\",\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <span className=\"center\">초기화중...</span>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}