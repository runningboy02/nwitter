{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Notice.js","routes/rrd.js","routes/Menu.js","routes/Re.js","routes/Report.js","components/Chat.js","components/ChatFac.js","routes/Chatting.js","routes/Info.js","routes/Lock.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","method","className","type","placeholder","required","href","color","onClick","prev","Auth","onGuestClick","signInAnonymously","then","alert","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","style","marginBottom","class","faGoogle","faGithub","window","location","faArrowAltCircleDown","Nweet","ifname","guest","setColor","userObj","nweetObj","isOwner","history","useHistory","editing","setEditing","info","setInfo","text","newNweet","setNewNweet","admin","setAdmin","onColor","setOnColor","onDeleteClick","confirm","doc","id","delete","attachmentUrl","refFromURL","onClolrClick","toggleEditing","infoClick","update","creatorName","creatorEmail","undefined","nweetStyle","backgroundColor","createdTime","isMobile","adminemail","creatorId","faToggleOn","faToggleOff","title","push","faFlag","autoFocus","Style","src","faTrash","faPencilAlt","faQuestionCircle","NweetFactory","nweet","setNweet","attachment","setAttachment","UserAgent","navigator","userAgent","match","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","split","b","repeat","length","c","date","Date","year","getFullYear","month","getMonth","clockDate","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Tim","createdAt","now","displayName","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","newDisplayName","setNewDisplayName","displayname","updateProfile","emailclick","lockEmail","v","signOut","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","faComments","faStickyNote","faCompass","faMedal","Notice","Rrd","reload","Menu","Re","sendPasswordResetEmail","user","currentUser","prompt","Report","width","height","frameborder","marginheight","marginwidth","Chat","chatObj","ChatFac","chat","setChat","canChat","setCanChat","adminEmail","element","document","getElementById","scrollTop","scrollHeight","clientHeight","login","Chatting","chats","setChats","orderBy","chatArray","Info","loading","setLoading","medal","setMedal","setNews","fetch","res","json","catch","news","Mcount","country","gold","silver","bronze","total","discipline","disciplineName","Lock","lock","setLock","setText","ans","setAns","keys","setKeys","onChangek","changeMode","key","Crypto","AES","encrypt","toString","obj","range","createRange","selectNode","childNodes","sel","getSelection","removeAllRanges","addRange","execCommand","removeRange","decrypt","enc","Utf8","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","args","Boolean","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f787f04.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqdFTcX25DoBzmO0c3DqffqhXhqUU3CnY\",\r\n  authDomain: \"nwitter-a6440.firebaseapp.com\",\r\n  projectId: \"nwitter-a6440\",\r\n  storageBucket: \"nwitter-a6440.appspot.com\",\r\n  messagingSenderId: \"971228339638\",\r\n  appId: \"1:971228339638:web:2381d857f5e6e20f1ef517\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} method=\"post\" className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"이메일\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"계정 생성\" : \"로그인\"}\r\n        />\r\n        {error && (\r\n          <>\r\n            <span className=\"authError\">\r\n              {error}\r\n              <br />\r\n            </span>\r\n            <center>\r\n              <a href=\"https://forms.gle/ncsU6vNx1c7qNyFu7\" color=\"mint\">\r\n                비밀번호를 잊었다면 여기로\r\n              </a>\r\n            </center>\r\n          </>\r\n        )}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"로그인\" : \"계정 생성\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { faArrowAltCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onGuestClick = async () => {\r\n    authService.signInAnonymously().then(async () => {\r\n      alert(\"게스트로 로그인 했습니다. 프로필에서 이름을 설정해 주세요.\");\r\n    });\r\n  };\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  const onDownClick = () => {\r\n    window.location.href =\r\n      \"https://runningboy02.github.io/bot/내나라인민소통망-손전화기에%20내려받기.zip\";\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"red\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <span className=\"center title\">내나라 인민 소통망</span>\r\n      <br />\r\n      <br />\r\n      <AuthForm />\r\n      <span class=\"center buk\">\r\n        ※손전화기 앱에서는 소셜로그인이 작동하지 않습니다.\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Google로 계속 <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Github로 계속 <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n        <button onClick={onGuestClick} name=\"github\" className=\"authBtn\">\r\n          게스트로 로그인\r\n        </button>\r\n        <button onClick={onDownClick} className=\"authBtn\">\r\n          <FontAwesomeIcon icon={faArrowAltCircleDown} />\r\n          Android 설치파일 내려받기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n  faQuestionCircle,\r\n  faFlag,\r\n  faToggleOff,\r\n  faToggleOn,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Nweet = ({ userObj, nweetObj, isOwner }) => {\r\n  const history = useHistory();\r\n  const [editing, setEditing] = useState(false);\r\n  const [info, setInfo] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const [admin, setAdmin] = useState(false);\r\n  const [onColor, setOnColor] = useState(true);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const onClolrClick = () => setOnColor((prev) => !prev);\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const infoClick = () => {\r\n    if (userObj.email === \"runningboy02@naver.com\") {\r\n      setAdmin(true);\r\n    }\r\n    setInfo((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const report = () => {\r\n    history.push(\"/report\");\r\n  };\r\n  let ifname;\r\n  if (nweetObj.creatorName === null) {\r\n    ifname = false;\r\n  } else {\r\n    ifname = true;\r\n  }\r\n  let guest;\r\n  if (nweetObj.creatorEmail === null) {\r\n    guest = false;\r\n  } else {\r\n    guest = true;\r\n  }\r\n  let setColor;\r\n  const color = nweetObj.color;\r\n  if (color === undefined) {\r\n    setColor = \"#ffffff\";\r\n  } else if (onColor === true) {\r\n    setColor = color;\r\n  } else if (onColor === false) {\r\n    setColor = \"#ffffff\";\r\n  }\r\n  const nweetStyle = { backgroundColor: setColor };\r\n  return (\r\n    <>\r\n      <div className=\"nweet\" style={nweetStyle}>\r\n        {info ? (\r\n          <>\r\n            <h1 className=\"buk\">게시물 정보</h1>\r\n            <br />\r\n            <h5 className=\"createdTime\">{nweetObj.createdTime}에 게시됨</h5>\r\n            <br />\r\n            <h5 className=\"createdTime\">\r\n              {nweetObj.isMobile ? <>모바일</> : <>Pc</>}에서 작성됨\r\n            </h5>\r\n            <br />\r\n            <h5 className=\"createdTime\">\r\n              {guest ? (\r\n                <>\r\n                  작성자 이메일 :{\" \"}\r\n                  {admin ? (\r\n                    <>{nweetObj.adminemail}</>\r\n                  ) : (\r\n                    <>{nweetObj.creatorEmail}</>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>게스트로 로그인한 사용자</>\r\n              )}\r\n            </h5>\r\n            <br />\r\n            <h5 className=\"createdTime\">게시물 박스 색 : {setColor}</h5>\r\n            <br />\r\n            <h5 className=\"createdTime\">\r\n              {nweetObj.attachmentUrl && (\r\n                <a href={nweetObj.attachmentUrl}>이미지 주소로 바로 이동</a>\r\n              )}\r\n            </h5>\r\n            {admin ? (\r\n              <>\r\n                <br />\r\n                <h5 className=\"createdTime\">{nweetObj.creatorId}</h5>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <br />\r\n            <h5 className=\"createdTime\">\r\n              {onColor ? (\r\n                <>\r\n                  색 끄기\r\n                  <FontAwesomeIcon\r\n                    icon={faToggleOn}\r\n                    color=\"black\"\r\n                    onClick={onClolrClick}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  색 켜기\r\n                  <FontAwesomeIcon\r\n                    icon={faToggleOff}\r\n                    color=\"black\"\r\n                    onClick={onClolrClick}\r\n                  />\r\n                </>\r\n              )}\r\n            </h5>\r\n            <br />\r\n            <h5 className=\"createdTime report\" title=\"신고\" onClick={report}>\r\n              신고 <FontAwesomeIcon icon={faFlag} color=\"red\" />\r\n            </h5>\r\n            <br />\r\n            <span onClick={infoClick} className=\"formBtn cancelBtn\">\r\n              취소\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {editing ? (\r\n              <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"게시물 문구를 수정하세요.\"\r\n                    value={newNweet}\r\n                    required\r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"게시물 수정\"\r\n                    className=\"formBtn\"\r\n                  />\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                  취소\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h5 className=\"creatorName\">\r\n                  {ifname ? (\r\n                    <>{nweetObj.creatorName}에게서 작성됨</>\r\n                  ) : (\r\n                    <span Style=\"color:red\">작성자 이름 없음</span>\r\n                  )}\r\n                  {onColor ? (\r\n                    <></>\r\n                  ) : (\r\n                    <span Style=\"color:red\" onClick={onClolrClick}>\r\n                      (색 꺼짐)\r\n                    </span>\r\n                  )}\r\n                </h5>\r\n                <br />\r\n                <h1>{nweetObj.text}</h1>\r\n                <div className=\"a\">\r\n                  {nweetObj.attachmentUrl && (\r\n                    <img src={nweetObj.attachmentUrl} />\r\n                  )}\r\n                </div>\r\n                <div className=\"nweet__actions\">\r\n                  {isOwner && (\r\n                    <>\r\n                      <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                      </span>\r\n                      <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                  {admin ? (\r\n                    <>\r\n                      <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} color=\"red\" />\r\n                      </span>\r\n                      <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} color=\"red\" />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <span onClick={infoClick}>\r\n                    <FontAwesomeIcon icon={faQuestionCircle} />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [color, setColor] = useState(\"#FFFFFF\");\r\n\r\n  const onSubmit = async (event) => {\r\n    let isMobile = false;\r\n    var UserAgent = navigator.userAgent;\r\n    if (\r\n      UserAgent.match(\r\n        /iPhone|iPod|Android|Windows CE|BlackBerry|Symbian|Windows Phone|webOS|Opera Mini|Opera Mobi|POLARIS|IEMobile|lgtelecom|nokia|SonyEricsson/i\r\n      ) != null ||\r\n      UserAgent.match(/LG|SAMSUNG|Samsung/) != null\r\n    ) {\r\n      isMobile = true;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (nweet !== \"\") {\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n      }\r\n      var creatorEmail;\r\n      if (userObj.email !== null) {\r\n        var a = userObj.email.split(\"@\")[0];\r\n        var b = \"*\".repeat(userObj.email.split(\"@\")[1].split(\".\")[0].length);\r\n        var c = userObj.email.split(\"@\")[1].split(\".\")[1];\r\n        creatorEmail = a + \"@\" + b + \".\" + c;\r\n      }\r\n      var date = new Date();\r\n      var year = date.getFullYear();\r\n      var month = date.getMonth();\r\n      var clockDate = date.getDate();\r\n      var hours = date.getHours();\r\n      var minutes = date.getMinutes();\r\n      var seconds = date.getSeconds();\r\n      var Tim =\r\n        `${year}년 ${month + 1}월 ${clockDate}일 ` +\r\n        `${hours < 10 ? `0${hours}` : hours}:${\r\n          minutes < 10 ? `0${minutes}` : minutes\r\n        }:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        creatorEmail: creatorEmail,\r\n        creatorName: userObj.displayName,\r\n        createdTime: Tim,\r\n        isMobile: isMobile,\r\n        color: color,\r\n        adminemail: userObj.email,\r\n      };\r\n      await dbService.collection(\"nweets\").add(nweetObj);\r\n      setNweet(\"\");\r\n      setAttachment(\"\");\r\n    } else {\r\n      alert(\"빈 문장은 입력이 불가능합니다\");\r\n    }\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onColor = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setColor(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"어떤생각을 하고있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 추가</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {userObj.email && (\r\n        <>\r\n          <label for=\"nweedColor\" className=\"colorrr buk\">\r\n            로그인을 하여 게시물 박스에 색을 설정 할 수 있음\r\n          </label>\r\n          <input\r\n            type=\"color\"\r\n            value=\"#ffffff\"\r\n            className=\"colorr\"\r\n            id=\"nweetColor\"\r\n            onChange={onColor}\r\n          />\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            userObj={userObj}\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayname !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const emailclick = () => {\r\n    alert(\r\n      \"오류 발생시 메뉴->건의사항 링크에 들어가서 오류나 건의 내용을 보내주세요\\n(버전이 맞지 않으면 오류가 발생할 수 있음)\"\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"표시될 이름\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 갱신\"\r\n          className=\"formBtn buk\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        <br />\r\n        <span className=\"center\">\r\n          이메일 : <span onClick={emailclick}>{userObj.email}</span>\r\n          <br />\r\n          <br />\r\n          암호화된 이메일 :{\" \"}\r\n          <span onClick={emailclick}>{userObj.lockEmail}</span>\r\n        </span>\r\n      </form>\r\n      <br />\r\n      <span className=\"center buk\">\r\n        오류나 건의사항이 있다면 전자우편을 클릭해 주세요\r\n      </span>\r\n      <br />\r\n      <span className=\"center\">{userObj.v}</span>\r\n      <span className=\"formBtn cancelBtn logOut buk\" onClick={onLogOutClick}>\r\n        로그 아웃\r\n      </span>\r\n      <br />\r\n      <span className=\"center buk help\">도와주신 분들</span>\r\n      <br />\r\n      <p className=\"buk\">\r\n        <p>제작자 : 런닝보이</p>\r\n        <p>이름 창조자 : 서브마린</p>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faUser,\r\n  faStickyNote,\r\n  faTools,\r\n  faRedo,\r\n  faCompass,\r\n  faComments,\r\n  faMedal,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { MobileView } from \"react-device-detect\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"Home\"\r\n              icon={faTwitter}\r\n              color={\"red\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>게시판</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"profile\"\r\n              icon={faUser}\r\n              color={\"#04AAFF\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 프로필`\r\n                : \"프로필\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/chat\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"Chat\"\r\n              icon={faComments}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>말동무 이야기방β</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/notice\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"Notice\"\r\n              icon={faStickyNote}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>공지사항</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/menu\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"menu\"\r\n              icon={faCompass}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>메뉴</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/info\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              title=\"menu\"\r\n              icon={faMedal}\r\n              color={\"#fff\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>올림픽 메달 정보</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\n// 공지사항에 모바일에서만 버전 가져와 보여주기\r\nconst Notice = ({ userObj }) => {\r\n  const ver = () => {\r\n    window.location.href = \"https://runningboy02.tistory.com/5\";\r\n  };\r\n  return (\r\n    <>\r\n      <span className=\"center buk\" Style=\"font-size: 30px\">\r\n        v 1.3.3부터 패치 보고서가 완전히 블로그로 이동하고 공지사항이 블로그로\r\n        이동했습니다.\r\n        <br />\r\n        <br />\r\n        지금 버전 : {userObj.v}\r\n        <br />\r\n        <button className=\"ver buk\" onClick={ver}>\r\n          지금 버전 최신 확인\r\n        </button>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default Notice;\r\n","import React from \"react\";\r\n\r\nconst Rrd = () => {\r\n  return (\r\n    <>\r\n      {window.location.reload()}\r\n      {(window.location.href = \"/nwitter\")}\r\n    </>\r\n  );\r\n};\r\nexport default Rrd;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  const history = useHistory();\r\n  const blog = () => {\r\n    window.location.href = \"https://runningboy02.tistory.com/\";\r\n  };\r\n  const goGoogleDocs = () => {\r\n    history.push(\"/report\");\r\n  };\r\n  const ban = () => {\r\n    history.push(\"/re\");\r\n  };\r\n  const lock = () => {\r\n    history.push(\"/lock\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"center buk menubtn\" onClick={blog}>\r\n        블로그 바로가기\r\n      </button>\r\n      <button className=\"center buk menubtn\" onClick={ban}>\r\n        회원 탈퇴 및 비밀번호 변경 바로가기\r\n      </button>\r\n      <button className=\"center buk menubtn\" onClick={goGoogleDocs}>\r\n        건의사항 및 신고\r\n      </button>\r\n      <button className=\"center buk menubtn\" onClick={lock}>\r\n        암호화\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Menu;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// 공지사항에 모바일에서만 버전 가져와 보여주기\r\nconst Re = ({ userObj }) => {\r\n  const history = useHistory();\r\n  const repassword = () => {\r\n    authService.sendPasswordResetEmail(userObj.email).then(() => {\r\n      alert(userObj.email + \"로 비밀번호 변경 메일을 발송 했습니다.\");\r\n    });\r\n  };\r\n  const delacc = () => {\r\n    const user = authService.currentUser;\r\n    var name = prompt(\r\n      \"계정을 삭제하려면 \" + userObj.displayName + \"를 입력하세요.\"\r\n    );\r\n    if (name === userObj.displayName) {\r\n      user.delete().then(() => {\r\n        alert(\"계정이 영구적으로 삭제되었습니다.\");\r\n        history.push(\"/\");\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다. 계정이 그대로 유지됩니다\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={repassword}>비밀번호 재설정</button>\r\n      <button onClick={delacc} className=\"delacc\">\r\n        계정 영구 삭제\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Re;\r\n","import React from \"react\";\r\n\r\nfunction Report({ userObj }) {\r\n  return (\r\n    <iframe\r\n      src=\"https://docs.google.com/forms/d/e/1FAIpQLScRDhQvNi3WubR5UHVQAlAeOrjGa_n912AUAVdre5PXHUY0Ug/viewform?embedded=true\"\r\n      width=\"640\"\r\n      height=\"726\"\r\n      frameborder=\"0\"\r\n      marginheight=\"0\"\r\n      marginwidth=\"0\"\r\n    >\r\n      로드 중…\r\n    </iframe>\r\n  );\r\n}\r\nexport default Report;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Chat({ chatObj, isOwner }) {\r\n  return (\r\n    <>\r\n      {isOwner ? (\r\n        <>\r\n          <br />\r\n          <div className=\"chat_area_own\">\r\n            <h5>&nbsp;{chatObj.text}</h5>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <br />\r\n          <h1>{chatObj.creatorName}</h1>\r\n          <div className=\"chat_area_y\">\r\n            <h5>&nbsp;{chatObj.text}</h5>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Chat;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ChatFac({ userObj }) {\r\n  const [chat, setChat] = useState(\"\");\r\n  const [canChat, setCanChat] = useState(true);\r\n  //await dbService.collection(\"chats\").add(ChatObj);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (chat !== \"\") {\r\n      // 이메일 가리기\r\n      var creatorEmail = null;\r\n      if (userObj.email !== null) {\r\n        var a = userObj.email.split(\"@\")[0];\r\n        var b = \"*\".repeat(userObj.email.split(\"@\")[1].split(\".\")[0].length);\r\n        var c = userObj.email.split(\"@\")[1].split(\".\")[1];\r\n        creatorEmail = a + \"@\" + b + \".\" + c;\r\n      }\r\n      //   시간\r\n      var date = new Date();\r\n      var year = date.getFullYear();\r\n      var month = date.getMonth();\r\n      var clockDate = date.getDate();\r\n      var hours = date.getHours();\r\n      var minutes = date.getMinutes();\r\n      var seconds = date.getSeconds();\r\n      var Tim =\r\n        `${year}년 ${month + 1}월 ${clockDate}일 ` +\r\n        `${hours < 10 ? `0${hours}` : hours}:${\r\n          minutes < 10 ? `0${minutes}` : minutes\r\n        }:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n      // 업로드\r\n      const chatObj = {\r\n        text: chat,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        creatorEmail: creatorEmail,\r\n        creatorName: userObj.displayName,\r\n        createdTime: Tim,\r\n        adminEmail: userObj.email,\r\n      };\r\n      setChat(\"\");\r\n      await dbService.collection(\"chats\").add(chatObj);\r\n      var element = document.getElementById(\"chat_area\");\r\n      element.scrollTop = element.scrollHeight - element.clientHeight;\r\n    }\r\n  };\r\n  let login = <h5>로그인 하세요.</h5>;\r\n  const onChange = (event) => {\r\n    if (userObj.email === null || userObj.displayName === null) {\r\n      setCanChat(false);\r\n    }\r\n    if (\r\n      canChat === false &&\r\n      userObj.email !== null &&\r\n      userObj.displayName === null\r\n    ) {\r\n      login = (\r\n        <div className=\"center\">\r\n          <br />\r\n          <h5>이름을 설정하세요.</h5>\r\n          <a href=\"/#/profile\" style={{ color: \"#c0c0c0\" }}>\r\n            이름 설정 바로가기\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setChat(value);\r\n  };\r\n  return (\r\n    <>\r\n      {canChat ? (\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"chat__container\">\r\n            <input\r\n              className=\"chat__input\"\r\n              type=\"text\"\r\n              placeholder=\"엔터키로 전송\"\r\n              onChange={onChange}\r\n              value={chat}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"chat__arrow\" />\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"center\">채팅 권한 없음</h1>\r\n          {login}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default ChatFac;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Chat from \"components/Chat\";\r\nimport ChatFac from \"components/ChatFac\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faToggleOff, faToggleOn } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Chatting = ({ userObj }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [autoBtm, setAutoBtm] = useState(false);\r\n  /* var time;\r\n  function scroll() {\r\n    time = setInterval(function () {\r\n      var element = document.getElementById(\"chat_area\");\r\n      element.scrollTop = element.scrollHeight - element.clientHeight;\r\n    }, 1000);\r\n  }\r\n  function stopScroll() {\r\n    clearInterval(time);\r\n  }\r\n  const toggleBtm = () => {\r\n    setAutoBtm((prev) => !prev);\r\n    if (autoBtm === true) {\r\n      scroll();\r\n    } else {\r\n      stopScroll();\r\n    }\r\n  };\r\n  */\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"chats\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((snapshot) => {\r\n        const chatArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setChats(chatArray);\r\n      });\r\n  }, []);\r\n  /*{autoBtm ? (\r\n        <>\r\n          자동 아래로 스크롤\r\n          <FontAwesomeIcon icon={faToggleOn} size=\"2x\" onClick={toggleBtm} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          자동 아래로 스크롤\r\n          <FontAwesomeIcon icon={faToggleOff} size=\"2x\" onClick={toggleBtm} />\r\n        </>\r\n      )} */\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"buk center\" style={{ fontSize: \"50px\" }}>\r\n        말동무 이야기방\r\n      </h1>\r\n      <br />\r\n\r\n      <div style={{ marginTop: 30 }}>\r\n        <div className=\"chat_area\" id=\"chat_area\">\r\n          {chats.map((chat) => (\r\n            <Chat\r\n              userObj={userObj}\r\n              key={chat.id}\r\n              isOwner={chat.creatorId === userObj.uid}\r\n              chatObj={chat}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <ChatFac userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\nexport default Chatting;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Info() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [medal, setMedal] = useState(\"\");\r\n  const [news, setNews] = useState(\"\");\r\n  useEffect(async () => {\r\n    await window\r\n      .fetch(`https://api-gw.sports.naver.com/olympic/tokyo2020/countries/KOR`)\r\n      .then((res) => res.json())\r\n      .then((medal) => {\r\n        setMedal(medal);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n    await window\r\n      .fetch(\r\n        `https://api-gw.sports.naver.com/news/rankings/popular/tokyo2020?page=1&pageSize=10`\r\n      )\r\n      .then((res) => res.json())\r\n      .then((news) => {\r\n        setNews(news);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  });\r\n  var Mcount = -1;\r\n  var Ncount = 0;\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>메달 정보 가져오는 중..</>\r\n      ) : (\r\n        <div className=\"center\">\r\n          <h1>{error}</h1>\r\n          <h1>대한민국 전체 메달</h1>\r\n          <br />\r\n          <h5>금메달 : {medal.result.country.gold}개</h5>\r\n          <h5>은메달 : {medal.result.country.silver}개</h5>\r\n          <h5>동메달 : {medal.result.country.bronze}개</h5>\r\n          <h5>전체 : {medal.result.country.total}개</h5>\r\n          {medal.result?.discipline.map(() => {\r\n            Mcount++;\r\n            return (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <h1>\r\n                  대한민국 {medal.result?.discipline[Mcount]?.disciplineName}{\" \"}\r\n                  메달\r\n                </h1>\r\n                <br />\r\n                <h5>금메달 : {medal.result?.discipline[Mcount]?.gold}개</h5>\r\n                <h5>은메달 : {medal.result?.discipline[Mcount]?.silver}개</h5>\r\n                <h5>동메달 : {medal.result?.discipline[Mcount]?.bronze}개</h5>\r\n                <h5>전체 : {medal.result?.discipline[Mcount]?.total}개</h5>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Crypto from \"crypto-js\";\r\n\r\n//암호화 키 : LockString+정한 키\r\nfunction Lock() {\r\n  const [lock, setLock] = useState(true);\r\n  const [text, setText] = useState(\"\");\r\n  const [ans, setAns] = useState(\"\");\r\n  const [keys, setKeys] = useState(\"\");\r\n  function locks(data, key) {\r\n    return Crypto.AES.encrypt(data, key).toString();\r\n  }\r\n  function unLock(data, key) {\r\n    return Crypto.AES.decrypt(data, key).toString(Crypto.enc.Utf8);\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setAns(locks(text, keys));\r\n  };\r\n  const onSubmitm = (event) => {\r\n    event.preventDefault();\r\n    setAns(unLock(text, keys));\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setText(value);\r\n  };\r\n  const onChangek = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setKeys(value);\r\n  };\r\n  const changeMode = () => {\r\n    setLock((prev) => !prev);\r\n    setAns(\"\");\r\n    setText(\"\");\r\n    setKeys(\"\");\r\n  };\r\n  const copy3 = () => {\r\n    var obj = document.getElementById(\"aaa\");\r\n    if (obj !== \"\") {\r\n      var range = document.createRange();\r\n      range.selectNode(obj.childNodes[0]); //텍스트 정보를 Range 객체에 저장\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges(); //기존 선택정보 삭제\r\n      sel.addRange(range); //텍스트 정보 선택\r\n      document.execCommand(\"copy\"); //복사\r\n      window.alert(\"복사했습니다.\");\r\n      sel.removeRange(range); //선택 정보 삭제\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      {lock ? (\r\n        <>\r\n          <h1 className=\"center\">문자열 암호화</h1>\r\n          <button onClick={changeMode}>복호화</button>\r\n          <form onSubmit={onSubmit}>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              onChange={onChange}\r\n              placeholder=\"암호화 할 문자열\"\r\n              value={text}\r\n              className=\"factoryInput__input\"\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"복호화 할때 필요한 키\"\r\n              onChange={onChangek}\r\n              value={keys}\r\n              className=\"factoryInput__input\"\r\n              required\r\n            />\r\n            <br />\r\n            <input type=\"submit\" value=\"암호화\" />\r\n          </form>\r\n          <h5 id=\"answer\">\r\n            암호화된 문자열 : <a id=\"aaa\">{ans}</a>\r\n          </h5>\r\n          <button onClick={copy3}>복사</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"center\">문자열 복호화</h1>\r\n          <button onClick={changeMode}>암호화</button>\r\n          <form onSubmit={onSubmitm}>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              onChange={onChange}\r\n              placeholder=\"암호화 된 문자열\"\r\n              value={text}\r\n              className=\"factoryInput__input\"\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"키\"\r\n              onChange={onChangek}\r\n              value={keys}\r\n              className=\"factoryInput__input\"\r\n              required\r\n            />\r\n            <br />\r\n            <input type=\"submit\" value=\"복호화\" />\r\n          </form>\r\n          <h5>복호화된 문자열 : {ans}</h5>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lock;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Notice from \"routes/Notice\";\r\nimport Rrd from \"routes/rrd\";\r\nimport Menu from \"routes/Menu\";\r\nimport Re from \"routes/Re\";\r\nimport Report from \"routes/Report\";\r\nimport Chatting from \"routes/Chatting\";\r\nimport Info from \"routes/Info\";\r\nimport Lock from \"routes/Lock\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/notice\">\r\n              <Notice userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/rrd\">\r\n              <Rrd userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/menu\">\r\n              <Menu userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/re\">\r\n              <Re userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/report\">\r\n              <Report userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/chat\">\r\n              <Chatting userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/info\">\r\n              <Info userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/lock\">\r\n              <Lock userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport Crypto from \"crypto-js\";\n\nfunction App() {\n  //이메일 암호화 키 : EmailLock\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  function lock(data, key) {\n    return Crypto.AES.encrypt(data, key).toString();\n  }\n  let key = \"EmailLock\";\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          lockEmail: lock(user.email, key),\n          updateProfile: (args) => user.updateProfile(args),\n          v: \"v 1.5\",\n          //버전 업데이트 시 이메일 발송\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = async () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      email: user.email,\n      v: \"v 1.5\",\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <span className=\"center\">초기화중...</span>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}