{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","tf","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","navigator","userAgent","toLowerCase","includes","icon","faTwitter","color","size","style","marginBottom","class","faGoogle","faGithub","window","location","href","faArrowAltCircleDown","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","creatorName","creatorEmail","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","collection","add","alert","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayname","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","title","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21d8f3e2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqdFTcX25DoBzmO0c3DqffqhXhqUU3CnY\",\r\n  authDomain: \"nwitter-a6440.firebaseapp.com\",\r\n  projectId: \"nwitter-a6440\",\r\n  storageBucket: \"nwitter-a6440.appspot.com\",\r\n  messagingSenderId: \"971228339638\",\r\n  appId: \"1:971228339638:web:2381d857f5e6e20f1ef517\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { faArrowAltCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  const onDownClick = () => {\r\n    window.location.href =\r\n      \"https://runningboy02.github.io/nwitter/내나라인민소통망-손전화기에%20내려받기.zip\";\r\n  };\r\n  const browse = navigator.userAgent.toLowerCase();\r\n  let tf;\r\n  if (browse.includes(\"https://runningboy02.github.io\")) {\r\n    tf = \"\";\r\n  } else {\r\n    tf = \"true\";\r\n  }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"red\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <span className=\"center title\">내나라 인민 소통망</span>\r\n      <br />\r\n      <br />\r\n      <AuthForm />\r\n      <span class=\"center buk\">\r\n        ※손전화기 앱에서는 소셜로그인이 작동하지 않습니다.\r\n      </span>\r\n      {tf && (\r\n        <>\r\n          <br />\r\n          <br />\r\n          <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n              Google로 계속 <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n              Github로 계속 <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n            <button onClick={onDownClick} className=\"authBtn\">\r\n              <FontAwesomeIcon icon={faArrowAltCircleDown} />\r\n              Android 설치파일 내려받기\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h5 className=\"creatorName\">\r\n            {nweetObj.creatorName}에게서 작성됨({nweetObj.creatorEmail})\r\n          </h5>\r\n\r\n          <br />\r\n          <h1>{nweetObj.text}</h1>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (nweet !== \"\") {\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n      }\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        creatorEmail: userObj.email,\r\n        creatorName: userObj.displayName,\r\n      };\r\n      await dbService.collection(\"nweets\").add(nweetObj);\r\n      setNweet(\"\");\r\n      setAttachment(\"\");\r\n    } else {\r\n      alert(\"빈 문장은 입력이 불가능합니다\");\r\n    }\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayname !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const emailclick = () => {\r\n    alert(\r\n      \"오류 발생시 'runningboy02@naver.com'으로 '\" +\r\n        userObj.email +\r\n        \"'과 오류나 건의 내용을 함께 보내주세요\\n(버전이 맞지 않으면 오류가 발생할 수 있음)\"\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        <br />\r\n        <span className=\"center\">\r\n          Your Email : <span onClick={emailclick}>{userObj.email}</span>\r\n        </span>\r\n      </form>\r\n      <br />\r\n      <span className=\"center buk\">\r\n        오류나 건의사항가 있다면 전자우편을 클릭해 주세요\r\n      </span>\r\n      <br />\r\n      <span className=\"center\">v 1.0</span>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon\r\n            title=\"Home\"\r\n            icon={faTwitter}\r\n            color={\"red\"}\r\n            size=\"2x\"\r\n          />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            title=\"profile\"\r\n            icon={faUser}\r\n            color={\"#04AAFF\"}\r\n            size=\"2x\"\r\n          />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName ? `${userObj.displayName}의 프로필` : \"프로필\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      email: user.email,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <span class=\"center\">Initializing...</span>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}